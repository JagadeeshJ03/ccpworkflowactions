name: UPSERT workflow
on:
  workflow_dispatch:
    inputs:
      bucketname:
        type: string
      port_payload:
        required: true
        description: Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string
jobs:
  create-entity-in-port-and-update-run:
    runs-on: ubuntu-latest
    steps:
      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: some_identifier
          title: Some Title
          team: "[]"
          icon: DefaultBlueprint
          blueprint: s3_bucket
          properties: |-
            {
              "arn": "string",
              "encryption": [],
              "lifecycleRules": [],
              "link": "https://example.com",
              "publicAccess": {
                "a": 1,
                "b": 2
              },
              "regionalDomainName": "string",
              "tags": [],
              "versioningStatus": "Enabled"
            }
          relations: "{}"
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: UPSERT
          runId: ${{fromJson(inputs.port_payload).context.runId}}
      - name: Generate Crossplane Claim YAML
        run: |
          # Replace this with your script to generate the Crossplane claim YAML content
          cat <<EOF > ${{fromJson(inputs.bucketname).context.bucketname}}.yaml
          apiVersion: s3.aws.upbound.io/v1beta1
          kind: Bucket
          metadata:
            name: crossplane-argo-ccp-bucket1-testing
          spec:
            forProvider:
              region: us-east-1
              tags:
                project: CCP
                env: dev
                aws: eks
            providerConfigRef:
              name: newawsconfig
          EOF
      - name: Commit and push changes
        run: |
          git config user.name "campusterminalhub"
          git config user.email "jjagadeeshgouda1996@gmail.com"
          git add crossplane_claim.yaml
          git commit -m "Generate Crossplane Claim YAML"
          git push
      - name: Create a log message
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_payload).context.runId}}
          logMessage: An example of a log message
      - name: Update action run status
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_payload).context.runId}}
          status: SUCCESS
          logMessage: Workflow completed successfully
